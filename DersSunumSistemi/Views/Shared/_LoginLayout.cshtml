<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Lisansüstü Ders Platformu</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        @@keyframes gradientShift {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0px);
            }
            50% {
                transform: translateY(-20px);
            }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
        }

        @@keyframes slideInLeft {
            from {
                opacity: 0;
                transform: translateX(-50px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @@keyframes slideInRight {
            from {
                opacity: 0;
                transform: translateX(50px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        body {
            background: linear-gradient(-45deg, #003d82, #001f3f, #004e9a, #002654);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0;
            padding: 0;
            position: relative;
            overflow: hidden;
        }

        body::before {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background-image:
                radial-gradient(circle at 20% 50%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 40% 20%, rgba(255, 255, 255, 0.05) 0%, transparent 50%);
            animation: float 20s ease-in-out infinite;
        }

        .login-container {
            width: 100%;
            padding: 2rem;
            position: relative;
            z-index: 1;
        }

        .login-wrapper {
            max-width: 1100px;
            margin: 0 auto;
            animation: fadeInUp 0.8s ease-out;
        }

        .login-wrapper .row {
            border-radius: 1.5rem;
            overflow: hidden;
            backdrop-filter: blur(10px);
        }

        .login-form-side {
            background: rgba(255, 255, 255, 0.98);
            padding: 3rem 2.5rem;
            min-height: 600px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            animation: slideInLeft 0.6s ease-out;
        }

        .login-info-side {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            color: white;
            padding: 3rem 2.5rem;
            min-height: 600px;
            display: flex;
            align-items: center;
            position: relative;
            overflow: hidden;
            animation: slideInRight 0.6s ease-out;
        }

        .login-info-side::before {
            content: '';
            position: absolute;
            width: 200%;
            height: 200%;
            top: -50%;
            left: -50%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            animation: float 15s ease-in-out infinite;
        }

        .login-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto;
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2.5rem;
            color: white;
            box-shadow: 0 10px 30px rgba(0, 61, 130, 0.3);
            animation: pulse 2s ease-in-out infinite;
        }

        .form-floating > .form-control {
            border-radius: 0.5rem;
            border: 2px solid #e9ecef;
            padding: 1rem 0.75rem;
            transition: all 0.3s ease;
        }

        .form-floating > .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(0, 61, 130, 0.15);
            transform: translateY(-2px);
        }

        .form-floating > label {
            padding: 1rem 0.75rem;
            transition: all 0.3s ease;
        }

        .btn-primary {
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            transform: translate(-50%, -50%);
            transition: width 0.6s, height 0.6s;
        }

        .btn-primary:hover::before {
            width: 300px;
            height: 300px;
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0, 61, 130, 0.4);
        }

        .btn-outline-primary {
            border: 2px solid var(--primary-color);
            color: var(--primary-color);
            transition: all 0.3s ease;
        }

        .btn-outline-primary:hover {
            background: var(--primary-color);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 61, 130, 0.3);
        }

        .login-header h2,
        .login-header p {
            animation: fadeInUp 0.6s ease-out;
        }

        .login-header p {
            animation-delay: 0.1s;
        }

        form .form-floating:nth-child(2) {
            animation: fadeInUp 0.6s ease-out;
            animation-delay: 0.2s;
        }

        form .form-floating:nth-child(3) {
            animation: fadeInUp 0.6s ease-out;
            animation-delay: 0.3s;
        }

        form button {
            animation: fadeInUp 0.6s ease-out;
            animation-delay: 0.4s;
        }

        .feature-item {
            padding: 0.75rem 0;
            font-size: 1.05rem;
            opacity: 0;
            animation: fadeInUp 0.6s ease-out forwards;
        }

        .feature-item:nth-child(1) {
            animation-delay: 0.5s;
        }

        .feature-item:nth-child(2) {
            animation-delay: 0.6s;
        }

        .feature-item:nth-child(3) {
            animation-delay: 0.7s;
        }

        .feature-item i {
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.25rem;
            transition: transform 0.3s ease;
        }

        .feature-item:hover i {
            transform: scale(1.2) rotate(5deg);
        }

        .demo-accounts {
            background: rgba(255, 255, 255, 0.1);
            padding: 1.5rem;
            border-radius: 1rem;
            backdrop-filter: blur(10px);
            animation: fadeInUp 0.6s ease-out;
            animation-delay: 0.8s;
            opacity: 0;
            animation-fill-mode: forwards;
        }

        .demo-card {
            background: rgba(255, 255, 255, 0.1);
            padding: 1rem;
            border-radius: 0.75rem;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .demo-card:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateX(10px) scale(1.02);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .demo-icon {
            width: 40px;
            height: 40px;
            border-radius: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            color: white;
            transition: all 0.3s ease;
        }

        .demo-card:hover .demo-icon {
            transform: rotate(360deg) scale(1.1);
        }

        .info-content {
            position: relative;
            z-index: 1;
        }

        @@media (max-width: 991px) {
            .login-info-side {
                order: -1;
                min-height: auto;
            }

            .login-form-side {
                min-height: auto;
            }
        }
    </style>
</head>
<body>
    <canvas id="particleCanvas"></canvas>
    @RenderBody()

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Particle Animation
        const canvas = document.getElementById('particleCanvas');
        const ctx = canvas.getContext('2d');

        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        canvas.style.position = 'fixed';
        canvas.style.top = '0';
        canvas.style.left = '0';
        canvas.style.zIndex = '0';
        canvas.style.pointerEvents = 'none';

        const particles = [];
        const particleCount = 50;

        class Particle {
            constructor() {
                this.x = Math.random() * canvas.width;
                this.y = Math.random() * canvas.height;
                this.size = Math.random() * 3 + 1;
                this.speedX = Math.random() * 1 - 0.5;
                this.speedY = Math.random() * 1 - 0.5;
                this.opacity = Math.random() * 0.5 + 0.2;
            }

            update() {
                this.x += this.speedX;
                this.y += this.speedY;

                if (this.x > canvas.width) this.x = 0;
                if (this.x < 0) this.x = canvas.width;
                if (this.y > canvas.height) this.y = 0;
                if (this.y < 0) this.y = canvas.height;
            }

            draw() {
                ctx.fillStyle = `rgba(255, 255, 255, ${this.opacity})`;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fill();
            }
        }

        function init() {
            for (let i = 0; i < particleCount; i++) {
                particles.push(new Particle());
            }
        }

        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            for (let i = 0; i < particles.length; i++) {
                particles[i].update();
                particles[i].draw();

                // Connect particles
                for (let j = i; j < particles.length; j++) {
                    const dx = particles[i].x - particles[j].x;
                    const dy = particles[i].y - particles[j].y;
                    const distance = Math.sqrt(dx * dx + dy * dy);

                    if (distance < 120) {
                        ctx.strokeStyle = `rgba(255, 255, 255, ${0.1 * (1 - distance / 120)})`;
                        ctx.lineWidth = 1;
                        ctx.beginPath();
                        ctx.moveTo(particles[i].x, particles[i].y);
                        ctx.lineTo(particles[j].x, particles[j].y);
                        ctx.stroke();
                    }
                }
            }

            requestAnimationFrame(animate);
        }

        window.addEventListener('resize', () => {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        });

        init();
        animate();

        // Demo account click to fill
        $('.demo-card').on('click', function() {
            const username = $(this).find('small').text().split(' / ')[0];
            const password = $(this).find('small').text().split(' / ')[1];

            $('#userName').val(username).focus().blur();
            $('#password').val(password).focus().blur();

            // Add shake animation
            $(this).css('animation', 'pulse 0.5s ease');
            setTimeout(() => {
                $(this).css('animation', '');
            }, 500);
        });

        // Input focus effects
        $('.form-control').on('focus', function() {
            $(this).parent().addClass('focused');
        }).on('blur', function() {
            if ($(this).val() === '') {
                $(this).parent().removeClass('focused');
            }
        });
    </script>
</body>
</html>
